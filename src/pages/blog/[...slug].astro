---
import { type CollectionEntry, getCollection } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import Prose from "../../components/Prose.astro";
import PostResume from "../../components/PostResume.astro";
import { dateFormat } from "../../utils/formatters/dateFormat";

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  return posts.map((post: CollectionEntry<"blog">) => ({
    params: { slug: post.slug },
    props: post,
  }));
}
type Props = CollectionEntry<"blog">;

const post = Astro.props;
const titleWithoutEmoji = post.data.title.substring(post.data.title.indexOf(" "));
const { Content } = await post.render();

const posts = (await getCollection("blog"))
  .filter((entry: CollectionEntry<"blog">) => entry.slug !== post.slug)
  .sort(() => Math.random() - 0.5)
  .slice(0, 3);
---

<Layout title=`David Cuéllar • ${titleWithoutEmoji}`>
  <h1 class="text-3xl font-extrabold mb-2 mt-12 text1">{post.data.title}</h1>
  <p class="mb-10 text2 opacity-60 text-xl font-bold">
    {dateFormat(post.data.pubDate)}
    <span class="mx-1">•</span>
    {post.data.readingTime}
    <span class="mx-1">•</span>
    {post.data.tag}
  </p>
  <article>
    <Prose>
      <Content />
    </Prose>
  </article>

  <section class="mt-16">
    {posts.map((post: any) => <PostResume post={post} small="true" />)}
  </section>
</Layout>
